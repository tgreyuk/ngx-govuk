{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "NgxGovukBackLinkDirective",
            "id": "directive-NgxGovukBackLinkDirective-db12825df8183aaed4d6b46c1d54cce3438751674a8ffe3c0a92a1f467d291e33b53f29cb6164af5deb8b443c7fbf4dadc8907968c15d8325a93355da2c9165c",
            "file": "libs/ngx-govuk/back-link/src/back-link.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: 'a[ngxGovukBackLink]',\n  standalone: true,\n})\nexport class NgxGovukBackLinkDirective {\n  @HostBinding('class') get className() {\n    return `govuk-back-link`;\n  }\n}\n",
            "selector": "a[ngxGovukBackLink]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "extends": [],
            "accessors": {
                "className": {
                    "name": "className",
                    "getSignature": {
                        "name": "className",
                        "type": "",
                        "returnType": "",
                        "line": 8
                    }
                }
            }
        },
        {
            "name": "NgxGovukBreadcrumbItemDirective",
            "id": "directive-NgxGovukBreadcrumbItemDirective-b22664fae2a22c6e442664fb89915d65621bbd1faac10bcc6e98bb2018859f388f4211e763e3a8f5be7cd42f281a0d0a8f60a51e2bebc7d6e52376137f75f6db",
            "file": "libs/ngx-govuk/breadcrumbs/src/breadcrumb-item.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { AfterViewInit, Directive, ElementRef, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[ngxGovukBreadcrumbItem]',\n  standalone: true,\n})\nexport class NgxGovukBreadcrumbItemDirective implements AfterViewInit {\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    const el = this.elementRef.nativeElement;\n    const wrapper = document.createElement('li');\n    wrapper.className = 'govuk-breadcrumbs__list-item';\n    el.parentNode.insertBefore(wrapper, el);\n    wrapper.appendChild(el);\n  }\n}\n",
            "selector": "[ngxGovukBreadcrumbItem]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        },
        {
            "name": "NgxGovukButtonDirective",
            "id": "directive-NgxGovukButtonDirective-f9b0e5ec0c1f09cfcc1d6deff102be9fcf50543fceeed78cca59112f3491c81220cc577d646597f7f589bbe4f73db8600384e2b50a37a65f666b9ce84249c1c8",
            "file": "libs/ngx-govuk/button/src/button.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, input } from '@angular/core';\n\n@Directive({\n  selector: 'a[ngxGovukButton],button[ngxGovukButton]',\n  standalone: true,\n})\nexport class NgxGovukButtonDirective {\n  @HostBinding('class') get className() {\n    const classes = ['govuk-button'];\n    if (this.type() === 'secondary') {\n      classes.push('govuk-button--secondary');\n    }\n    if (this.type() === 'warning') {\n      classes.push('govuk-button--warning');\n    }\n    return classes.join(' ');\n  }\n  type = input<'default' | 'secondary' | 'warning'>('default');\n}\n",
            "selector": "a[ngxGovukButton],button[ngxGovukButton]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "any",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "type",
                    "defaultValue": "input<'default' | 'secondary' | 'warning'>('default')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "methodsClass": [],
            "extends": [],
            "accessors": {
                "className": {
                    "name": "className",
                    "getSignature": {
                        "name": "className",
                        "type": "",
                        "returnType": "",
                        "line": 8
                    }
                }
            }
        },
        {
            "name": "NgxGovukButtonGroupDirective",
            "id": "directive-NgxGovukButtonGroupDirective-e3fa82d1eb0e18e9a606164c5c5325b95cb7cbe983b48367c523f9ee0e760f6f81c3515a239523ac00c1f698d0edbf1fa49a2fbf300fd61758f185c44a317c18",
            "file": "libs/ngx-govuk/button/src/button-group.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[ngxGovukButtonGroup]',\n  standalone: true,\n})\nexport class NgxGovukButtonGroupDirective {\n  @HostBinding('class') get className() {\n    return 'govuk-button-group';\n  }\n}\n",
            "selector": "[ngxGovukButtonGroup]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "extends": [],
            "accessors": {
                "className": {
                    "name": "className",
                    "getSignature": {
                        "name": "className",
                        "type": "",
                        "returnType": "",
                        "line": 8
                    }
                }
            }
        },
        {
            "name": "NgxGovukCheckboxesDirective",
            "id": "directive-NgxGovukCheckboxesDirective-4c5f906945b40a4fb18afddda7a73c344ce9c6de0e6842587305c1413cadf66a5692d91cc204a1376b02ad5b9e904501d1aab535f8df8bb98b6b24b781e71edb",
            "file": "libs/ngx-govuk/forms/src/checkboxes/checkboxes.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding } from '@angular/core';\n\n@Directive({\n  selector: '[ngxGovukCheckboxes]',\n  standalone: true,\n})\nexport class NgxGovukCheckboxesDirective {\n  @HostBinding('class') get className() {\n    return 'govuk-checkboxes';\n  }\n}\n",
            "selector": "[ngxGovukCheckboxes]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 8,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "extends": [],
            "accessors": {
                "className": {
                    "name": "className",
                    "getSignature": {
                        "name": "className",
                        "type": "",
                        "returnType": "",
                        "line": 8
                    }
                }
            }
        },
        {
            "name": "NgxGovukTextareaDirective",
            "id": "directive-NgxGovukTextareaDirective-93fffce0b9ffc116af08fc7cff39dc4b2c8166a088883998247540152115f589b37b9bc5145a5ccf4b25f246400f57e96421b6dc29024c392625c76cdfd5be1b",
            "file": "libs/ngx-govuk/forms/src/textarea/textarea.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostBinding,\n  Renderer2,\n} from '@angular/core';\n\n@Directive({\n  selector: 'textarea[ngxGovukTextarea]',\n  standalone: true,\n})\nexport class NgxGovukTextareaDirective implements AfterViewInit {\n  @HostBinding('class') get className() {\n    return `govuk-textarea`;\n  }\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  get field() {\n    return this.elementRef.nativeElement;\n  }\n\n  ngAfterViewInit(): void {\n    if (this.field) {\n      this.renderer.setAttribute(this.field, 'rows', '5');\n    }\n  }\n}\n",
            "selector": "textarea[ngxGovukTextarea]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "className": {
                    "name": "className",
                    "getSignature": {
                        "name": "className",
                        "type": "",
                        "returnType": "",
                        "line": 14
                    }
                },
                "field": {
                    "name": "field",
                    "getSignature": {
                        "name": "field",
                        "type": "",
                        "returnType": "",
                        "line": 19
                    }
                }
            }
        },
        {
            "name": "NgxGovukTextInputDirective",
            "id": "directive-NgxGovukTextInputDirective-ae39fd841dc0a1dc125c30c08a31f216c738fe4c766128d9c64f3dc3e5f0c9658d4652a5208bbca19df83cc470e7d6ac4e04ee7d9559693883b689547e9c869a",
            "file": "libs/ngx-govuk/forms/src/text-input/text-input.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input } from '@angular/core';\nimport { InputWidth } from '../models';\n\n@Directive({\n  selector: 'input[ngxGovukTextInput]',\n  standalone: true,\n})\nexport class NgxGovukTextInputDirective {\n  @HostBinding('class') get className() {\n    const classMap: Record<InputWidth, string> = {\n      '2': 'govuk-input--width-2',\n      '3': 'govuk-input--width-3',\n      '4': 'govuk-input--width-4',\n      '5': 'govuk-input--width-5',\n      '10': 'govuk-input--width-10',\n      '20': 'govuk-input--width-20',\n      full: 'govuk-!-width-full',\n    };\n    return `govuk-input ${classMap[this.width]}`;\n  }\n\n  @Input() width: InputWidth = 'full';\n}\n",
            "selector": "input[ngxGovukTextInput]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "width",
                    "defaultValue": "'full'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "InputWidth",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [],
            "extends": [],
            "accessors": {
                "className": {
                    "name": "className",
                    "getSignature": {
                        "name": "className",
                        "type": "",
                        "returnType": "",
                        "line": 9
                    }
                }
            }
        }
    ],
    "components": [
        {
            "name": "NgxGovukAccordionComponent",
            "id": "component-NgxGovukAccordionComponent-894145e1464681cdf974ec20411bbb669680d92ac07c8011eb97da261b5137f89b70397fbabfc5069f0a2ce04bc70e6516476f780f476cafb315859b1f9a6b81",
            "file": "libs/ngx-govuk/accordion/src/accordion.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-accordion",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./accordion.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isExpanded",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "panels",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueryList<NgxGovukAccordionPanelComponent>",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ContentChildren",
                            "stringifiedArguments": "NgxGovukAccordionPanelComponent"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "NgxGovukAccordionPanelComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChildren,\n  QueryList,\n  signal,\n} from '@angular/core';\nimport { NgxGovukAccordionPanelComponent } from './accordion-panel.component';\n\n@Component({\n  selector: 'ngx-govuk-accordion',\n  standalone: true,\n  imports: [CommonModule, NgxGovukAccordionPanelComponent],\n  templateUrl: './accordion.component.html',\n  styleUrl: './accordion.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxGovukAccordionComponent {\n  @ContentChildren(NgxGovukAccordionPanelComponent)\n  panels!: QueryList<NgxGovukAccordionPanelComponent>;\n  isExpanded = signal(false);\n\n  toggle() {\n    this.isExpanded.set(!this.isExpanded());\n    this.panels.toArray().forEach((panel) => {\n      panel.isExpanded.set(this.isExpanded());\n    });\n  }\n}\n",
            "styleUrl": "./accordion.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-accordion\">\n  <div class=\"govuk-accordion__controls\">\n    <button\n      type=\"button\"\n      class=\"govuk-accordion__show-all\"\n      aria-expanded=\"false\"\n      (click)=\"toggle()\"\n    >\n      <span\n        class=\"govuk-accordion-nav__chevron\"\n        [ngClass]=\"{\n          'govuk-accordion-nav__chevron--down': !isExpanded()\n        }\"\n      ></span\n      ><span class=\"govuk-accordion__show-all-text\">{{\n        isExpanded() ? 'Hide all sections' : 'Show all sections'\n      }}</span>\n    </button>\n  </div>\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "NgxGovukAccordionPanelComponent",
            "id": "component-NgxGovukAccordionPanelComponent-b50b8c2c0d9fb59da029cdebdc7e2a1d6586e4f8fb9e374cdc3b15f22721f643b40b59652a8628879a066f05fe814de3e9a97e55ce51c9a9965e095a44d7f4c2",
            "file": "libs/ngx-govuk/accordion/src/accordion-panel.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-accordion-panel",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./accordion-panel.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "contentId",
                    "defaultValue": "nanoid()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "heading",
                    "defaultValue": "input.required<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "<p>Description for heading</p>\n",
                    "line": 24,
                    "rawdescription": "\n\nDescription for heading\n"
                },
                {
                    "name": "headingId",
                    "defaultValue": "nanoid()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "isExpanded",
                    "defaultValue": "signal(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  input,\n  signal,\n} from '@angular/core';\nimport { nanoid } from 'nanoid';\n\n@Component({\n  selector: 'ngx-govuk-accordion-panel',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './accordion-panel.component.html',\n  styleUrl: './accordion-panel.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxGovukAccordionPanelComponent {\n  // @Input({ required: true }) heading!: string;\n\n  /**\n   * Description for heading\n   */\n  heading = input.required<string>();\n\n  isExpanded = signal(false);\n\n  headingId = nanoid();\n  contentId = nanoid();\n\n  toggle() {\n    this.isExpanded.set(!this.isExpanded());\n  }\n}\n",
            "styleUrl": "./accordion-panel.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-accordion__section\">\n  <div\n    class=\"govuk-accordion__section\"\n    [ngClass]=\"{\n      'govuk-accordion__section--expanded': isExpanded()\n    }\"\n  >\n    <div class=\"govuk-accordion__section-header\">\n      <h2 class=\"govuk-accordion__section-heading\">\n        <button\n          type=\"button\"\n          class=\"govuk-accordion__section-button\"\n          [attr.aria-controls]=\"contentId\"\n          [attr.aria-expanded]=\"isExpanded()\"\n          [attr.aria-label]=\"\n            heading + ', ' + isExpanded()\n              ? 'Hide this section'\n              : 'Show this section'\n          \"\n          (click)=\"toggle()\"\n        >\n          <span\n            class=\"govuk-accordion__section-heading-text\"\n            [attr.id]=\"headingId\"\n            ><span class=\"govuk-accordion__section-heading-text-focus\">\n              {{ heading }}\n            </span></span\n          ><span\n            class=\"govuk-visually-hidden govuk-accordion__section-heading-divider\"\n            >, </span\n          ><span class=\"govuk-accordion__section-toggle\"\n            ><span class=\"govuk-accordion__section-toggle-focus\"\n              ><span\n                class=\"govuk-accordion-nav__chevron\"\n                [ngClass]=\"{\n                  'govuk-accordion-nav__chevron--down': !isExpanded()\n                }\"\n              ></span\n              ><span class=\"govuk-accordion__section-toggle-text\">{{\n                isExpanded() ? 'Hide' : 'Show'\n              }}</span></span\n            ></span\n          >\n        </button>\n      </h2>\n    </div>\n    <div\n      [attr.id]=\"contentId\"\n      class=\"govuk-accordion__section-content\"\n      [attr.aria-labelledby]=\"headingId\"\n    >\n      <ng-content></ng-content>\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "NgxGovukBreadcrumbsComponent",
            "id": "component-NgxGovukBreadcrumbsComponent-2c58ace954de04154f44939f791ecb1ff17af0820b3859a96add1a25ec55f62562264ffd622ba6f8878bb2da44adefd23f03d812a3db63ac842fc115eacbbed2",
            "file": "libs/ngx-govuk/breadcrumbs/src/breadcrumbs.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-breadcrumbs",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./breadcrumbs.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component } from '@angular/core';\nimport { RouterModule } from '@angular/router';\n\n@Component({\n  selector: 'ngx-govuk-breadcrumbs',\n  standalone: true,\n  imports: [CommonModule, RouterModule],\n  templateUrl: './breadcrumbs.component.html',\n  styleUrl: './breadcrumbs.component.scss',\n})\nexport class NgxGovukBreadcrumbsComponent {}\n",
            "styleUrl": "./breadcrumbs.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-breadcrumbs\">\n  <ol class=\"govuk-breadcrumbs__list\">\n    <ng-content></ng-content>\n  </ol>\n</div>\n"
        },
        {
            "name": "NgxGovUkCharacterCountComponent",
            "id": "component-NgxGovUkCharacterCountComponent-3ac4eebb709639f0504c1783e128f9c9f001425c4faeeb3a23c591d804f6ca98fd3b9e899a3a6ce9a8a30b04cfcdb26e1aeaf37d461ed05bee798c4d851905e8",
            "file": "libs/ngx-govuk/forms/src/character-count/character-count.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-character-count",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./character-count.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "count",
                    "defaultValue": "signal(0)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "limit",
                    "defaultValue": "input(200)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "remainingCount",
                    "defaultValue": "computed(() => {\n    const remaining = this.limit() - this.count();\n    return remaining < 0 ? 0 : remaining;\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "textarea",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NgxGovukTextareaDirective",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "NgxGovukTextareaDirective"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setMaxLength",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Renderer2,\n  computed,\n  effect,\n  input,\n  signal,\n} from '@angular/core';\nimport { NgxGovukTextareaDirective } from '../textarea/textarea.directive';\n\n@Component({\n  selector: 'ngx-govuk-character-count',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './character-count.component.html',\n  styleUrl: './character-count.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxGovUkCharacterCountComponent implements AfterViewInit {\n  @ContentChild(NgxGovukTextareaDirective)\n  textarea!: NgxGovukTextareaDirective;\n\n  limit = input(200);\n  count = signal(0);\n\n  remainingCount = computed(() => {\n    const remaining = this.limit() - this.count();\n    return remaining < 0 ? 0 : remaining;\n  });\n\n  constructor(private renderer: Renderer2) {\n    effect(() => {\n      this.setMaxLength();\n    });\n  }\n\n  ngAfterViewInit(): void {\n    this.renderer.listen(this.textarea.field, 'input', () => {\n      this.count.set(this.textarea.field.value.length);\n    });\n  }\n\n  setMaxLength(): void {\n    if (this.textarea.field.maxLength != this.limit()) {\n      if (this.textarea.field.value) {\n        this.textarea.field.value = this.textarea.field.value.substring(\n          0,\n          this.limit()\n        );\n      }\n\n      this.renderer.setAttribute(\n        this.textarea.field,\n        'maxLength',\n        this.limit().toString()\n      );\n    }\n  }\n}\n",
            "styleUrl": "./character-count.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 33,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"govuk-character-count\">\n  <ng-content></ng-content>\n  <div class=\"govuk-hint govuk-character-count__message\">\n    {{ remainingCount() }}\n    {{ remainingCount() === 1 ? 'character' : 'characters' }} remaining.\n  </div>\n</div>\n"
        },
        {
            "name": "NgxGovukCheckboxComponent",
            "id": "component-NgxGovukCheckboxComponent-07957a8aa6d0e9e4f1fea923c77dafc27e0519305f606d6f275c6fc2a9182cf287c431a2dcfc96f179c013edbcff2cd0b4f63a927d86500779870849dd32b41e",
            "file": "libs/ngx-govuk/forms/src/checkboxes/checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxGovukCheckboxComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "ngx-govuk-checkbox",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "elId",
                    "defaultValue": "nanoid()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "label",
                    "defaultValue": "input.required<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "value",
                    "defaultValue": "model(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [
                {
                    "name": "onChecked",
                    "args": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  forwardRef,\n  input,\n  model,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { nanoid } from 'nanoid';\n\n@Component({\n  selector: 'ngx-govuk-checkbox',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './checkbox.component.html',\n  styleUrl: './checkbox.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxGovukCheckboxComponent),\n      multi: true,\n    },\n  ],\n})\nexport class NgxGovukCheckboxComponent implements ControlValueAccessor {\n  @HostBinding('class') get className() {\n    return 'govuk-checkboxes__item';\n  }\n\n  label = input.required<string>();\n  value = model(false);\n\n  elId = nanoid();\n\n  onChecked(event: Event) {\n    const target = event.target as HTMLInputElement;\n    this.onChange(target.checked);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onChange = (value: boolean) => {};\n  onTouched = () => {};\n\n  writeValue(value: boolean): void {\n    this.value.set(value);\n  }\n\n  registerOnChange(fn: any): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n}\n",
            "styleUrl": "./checkbox.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "className": {
                    "name": "className",
                    "getSignature": {
                        "name": "className",
                        "type": "",
                        "returnType": "",
                        "line": 31
                    }
                }
            },
            "templateData": "<input\n  class=\"govuk-checkboxes__input\"\n  [attr.id]=\"elId\"\n  type=\"checkbox\"\n  [checked]=\"value()\"\n  (change)=\"onChecked($event)\"\n  (blur)=\"onTouched()\"\n/>\n<label class=\"govuk-label govuk-checkboxes__label\" [attr.for]=\"elId\">\n  {{ label() }}\n</label>\n"
        },
        {
            "name": "NgxGovukDateInputComponent",
            "id": "component-NgxGovukDateInputComponent-b461e4a2438e67f55310281098c02f593dc53e61f6b4db9f12e331b4a332e1c52723d6dba28aecb4238ac32df472f8f599b59b18a5a7182894d67ed1f2f9b00c",
            "file": "libs/ngx-govuk/forms/src/date-input/date-input.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxGovukDateInputComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "ngx-govuk-date-input",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./date-input.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "day",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "dayId",
                    "defaultValue": "nanoid()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "month",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "monthId",
                    "defaultValue": "nanoid()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "year",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "yearId",
                    "defaultValue": "nanoid()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "onDateChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "NgxGovukFieldsetComponent",
                    "type": "component"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, forwardRef } from '@angular/core';\nimport {\n  ControlValueAccessor,\n  FormsModule,\n  NG_VALUE_ACCESSOR,\n} from '@angular/forms';\nimport { nanoid } from 'nanoid';\nimport { NgxGovukFieldsetComponent } from '../fieldset/fieldset.component';\n\n@Component({\n  selector: 'ngx-govuk-date-input',\n  standalone: true,\n  imports: [CommonModule, NgxGovukFieldsetComponent, FormsModule],\n  templateUrl: './date-input.component.html',\n  styleUrl: './date-input.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxGovukDateInputComponent),\n      multi: true,\n    },\n  ],\n})\nexport class NgxGovukDateInputComponent implements ControlValueAccessor {\n  dayId = nanoid();\n  monthId = nanoid();\n  yearId = nanoid();\n\n  day!: number;\n  month!: number;\n  year!: number;\n\n  value!: string;\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  onChange = (value: string) => {};\n  onTouched = () => {};\n\n  writeValue(value: string): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: (value: string) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  onDateChange(): void {\n    this.onChange(`${this.day}/${this.month}/${this.year}`);\n  }\n}\n",
            "styleUrl": "./date-input.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ],
            "templateData": "<div class=\"govuk-date-input\">\n  <div class=\"govuk-date-input__item\">\n    <div class=\"govuk-form-group\">\n      <label class=\"govuk-label govuk-date-input__label\" [attr.for]=\"dayId\">\n        Day\n      </label>\n      <input\n        class=\"govuk-input govuk-date-input__input govuk-input--width-2\"\n        [attr.id]=\"dayId\"\n        type=\"text\"\n        inputmode=\"numeric\"\n        [(ngModel)]=\"day\"\n        (input)=\"onDateChange()\"\n        autocomplete=\"bday-day\"\n      />\n    </div>\n  </div>\n  <div class=\"govuk-date-input__item\">\n    <div class=\"govuk-form-group\">\n      <label class=\"govuk-label govuk-date-input__label\" [attr.for]=\"monthId\">\n        Month\n      </label>\n      <input\n        class=\"govuk-input govuk-date-input__input govuk-input--width-2\"\n        [attr.id]=\"monthId\"\n        type=\"text\"\n        inputmode=\"numeric\"\n        [(ngModel)]=\"month\"\n        (input)=\"onDateChange()\"\n        autocomplete=\"bday-month\"\n      />\n    </div>\n  </div>\n  <div class=\"govuk-date-input__item\">\n    <div class=\"govuk-form-group\">\n      <label class=\"govuk-label govuk-date-input__label\" [attr.for]=\"yearId\">\n        Year\n      </label>\n      <input\n        class=\"govuk-input govuk-date-input__input govuk-input--width-4\"\n        [attr.id]=\"yearId\"\n        name=\"passport-issued-year\"\n        type=\"text\"\n        inputmode=\"numeric\"\n        [(ngModel)]=\"year\"\n        (input)=\"onDateChange()\"\n        autocomplete=\"bday-year\"\n      />\n    </div>\n  </div>\n</div>\n"
        },
        {
            "name": "NgxGovukDetailsComponent",
            "id": "component-NgxGovukDetailsComponent-20dec73b50c5d109d562cae307284608ad68a73c2cdd7e26fa8aa5aa863c5bc00fb6f28b38195b8037d548efe9b62c387fc1bf2e84ce3331042186dbe3f9bdd1",
            "file": "libs/ngx-govuk/details/src/details.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-details",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./details.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "summaryText",
                    "defaultValue": "input.required<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "text",
                    "defaultValue": "input.required<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, input } from '@angular/core';\n\n@Component({\n  selector: 'ngx-govuk-details',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './details.component.html',\n  styleUrl: './details.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxGovukDetailsComponent {\n  summaryText = input.required<string>();\n  text = input.required<string>();\n}\n",
            "styleUrl": "./details.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<details class=\"govuk-details\">\n  <summary class=\"govuk-details__summary\">\n    <span class=\"govuk-details__summary-text\">{{ summaryText() }}</span>\n  </summary>\n  <div class=\"govuk-details__text\">\n    {{ text() }}\n  </div>\n</details>\n"
        },
        {
            "name": "NgxGovukFieldsetComponent",
            "id": "component-NgxGovukFieldsetComponent-a7dacd83e0e5143eec8682349a2d07c79849b858656732b6aabfe82d281cd8687e0e6f80bec3879cc4c866e15133eba93c2afb06102dfa4067eff29d515d926f",
            "file": "libs/ngx-govuk/forms/src/fieldset/fieldset.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-fieldset",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./fieldset.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "asPageHeading",
                    "defaultValue": "input<boolean>(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "hint",
                    "defaultValue": "input<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "hintId",
                    "defaultValue": "nanoid()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "legend",
                    "defaultValue": "input.required<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, input } from '@angular/core';\nimport { nanoid } from 'nanoid';\n\n@Component({\n  selector: 'ngx-govuk-fieldset',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './fieldset.component.html',\n  styleUrl: './fieldset.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxGovukFieldsetComponent {\n  legend = input.required<string>();\n  hint = input<string>();\n  asPageHeading = input<boolean>(false);\n  hintId = nanoid();\n}\n",
            "styleUrl": "./fieldset.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"govuk-form-group\">\n  <fieldset class=\"govuk-fieldset\" [attr.aria-describedby]=\"hintId\">\n    @if (asPageHeading()){\n    <legend class=\"govuk-fieldset__legend govuk-fieldset__legend--l\">\n      <h1 class=\"govuk-fieldset__heading\">{{ legend() }}</h1>\n    </legend>\n    } @else {\n    <legend class=\"govuk-fieldset__legend\">Where do you live?</legend>\n    }\n    <div [attr.id]=\"hintId\" class=\"govuk-hint\">{{ hint() }}</div>\n    <ng-content></ng-content>\n  </fieldset>\n</div>\n"
        },
        {
            "name": "NgxGovukFormGroupComponent",
            "id": "component-NgxGovukFormGroupComponent-e4db54fb5d3b8779f867f6b150e7fbb32bc9c50e31a19c73a5010457bed3662c98ed0c69db90815f96d1e081afd257de583f726649c1ede459bdc1d1be449086",
            "file": "libs/ngx-govuk/forms/src/form-group/form-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-form-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form-group.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "asPageHeading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "hint",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "required": true,
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "optional": false,
                    "line": 21,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "elId",
                    "defaultValue": "nanoid()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "hintId",
                    "defaultValue": "nanoid()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  Renderer2,\n} from '@angular/core';\nimport { nanoid } from 'nanoid';\n\n@Component({\n  selector: 'ngx-govuk-form-group',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './form-group.component.html',\n  styleUrl: './form-group.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxGovukFormGroupComponent implements AfterViewInit {\n  @Input({ required: true }) label!: string;\n  @Input() hint!: string;\n  @Input() asPageHeading = false;\n\n  elId = nanoid();\n  hintId = nanoid();\n\n  constructor(private renderer: Renderer2, private elementRef: ElementRef) {}\n\n  ngAfterViewInit(): void {\n    const field = this.elementRef.nativeElement.querySelector('input,textarea');\n    if (field) {\n      this.renderer.setAttribute(field, 'id', this.elId);\n      if (this.hint) {\n        this.renderer.setAttribute(field, 'aria-describedby', this.hintId);\n      }\n    }\n  }\n}\n",
            "styleUrl": "./form-group.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "elementRef",
                        "type": "ElementRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"govuk-form-group\">\n  @if (asPageHeading){\n  <h1 class=\"govuk-label-wrapper\">\n    <label [attr.for]=\"elId\" class=\"govuk-label govuk-label--l\">{{\n      label\n    }}</label>\n  </h1>\n  } @else {\n  <label [attr.for]=\"elId\" class=\"govuk-label\">{{ label }}</label>\n  }\n  <div *ngIf=\"hint\" [attr.id]=\"hintId\" class=\"govuk-hint\">\n    {{ hint }}\n  </div>\n  <ng-content></ng-content>\n</div>\n"
        },
        {
            "name": "NgxGovukRadioComponent",
            "id": "component-NgxGovukRadioComponent-491be3d60e1144f3f57e7dc93c7459c1af1125e6f6db84398c2b01e142150760e14cb5c19dd0af75dd2fffd0ecd498f921995f8cf4814b823d700e21c26c0a6a",
            "file": "libs/ngx-govuk/forms/src/radios/radio.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ngx-govuk-radio",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./radio.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "elId",
                    "defaultValue": "nanoid()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "inputEl",
                    "defaultValue": "viewChild<ElementRef<HTMLInputElement>>('inputEl')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "label",
                    "defaultValue": "input.required<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "selected",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "value",
                    "defaultValue": "input.required<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [
                {
                    "name": "onSelected",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  input,\n  viewChild,\n} from '@angular/core';\nimport { nanoid } from 'nanoid';\n\n@Component({\n  selector: 'ngx-govuk-radio',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './radio.component.html',\n  styleUrl: './radio.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NgxGovukRadioComponent {\n  @HostBinding('class') get className() {\n    return 'govuk-radios__item';\n  }\n\n  selected = new EventEmitter<string>();\n\n  label = input.required<string>();\n  value = input.required<string>();\n  inputEl = viewChild<ElementRef<HTMLInputElement>>('inputEl');\n\n  elId = nanoid();\n\n  onSelected() {\n    this.selected.emit(this.value());\n  }\n}\n",
            "styleUrl": "./radio.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "className": {
                    "name": "className",
                    "getSignature": {
                        "name": "className",
                        "type": "",
                        "returnType": "",
                        "line": 24
                    }
                }
            },
            "templateData": "<input\n  #inputEl\n  class=\"govuk-radios__input\"\n  [attr.id]=\"elId\"\n  type=\"radio\"\n  [attr.value]=\"value()\"\n  (click)=\"onSelected()\"\n/>\n<label class=\"govuk-label govuk-radios__label\" [attr.for]=\"elId\">\n  {{ label() }}\n</label>\n"
        },
        {
            "name": "NgxGovukRadioGroupComponent",
            "id": "component-NgxGovukRadioGroupComponent-199887a1ea68e25a76537d333b1e2de870ae0bd9ec4e9605b4888967d2d8714ac005ef6fd45f588373bbe04adc4af7e09086349448d34f6ac1439bba2760eb57",
            "file": "libs/ngx-govuk/forms/src/radios/radio-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => NgxGovukRadioGroupComponent), multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "ngx-govuk-radio-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./radio-group.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "groupName",
                    "defaultValue": "nanoid()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "onTouched",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "radios",
                    "defaultValue": "contentChildren(NgxGovukRadioComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "string",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": []
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Renderer2,\n  contentChildren,\n  forwardRef,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { nanoid } from 'nanoid';\nimport { NgxGovukRadioComponent } from './radio.component';\n\n@Component({\n  selector: 'ngx-govuk-radio-group',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './radio-group.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxGovukRadioGroupComponent),\n      multi: true,\n    },\n  ],\n})\nexport class NgxGovukRadioGroupComponent\n  implements AfterViewInit, ControlValueAccessor\n{\n  @HostBinding('class') get className() {\n    return 'govuk-radios';\n  }\n\n  groupName = nanoid();\n\n  radios = contentChildren(NgxGovukRadioComponent);\n\n  value!: string;\n\n  constructor(private renderer: Renderer2) {}\n\n  ngAfterViewInit(): void {\n    this.radios().forEach((radio) => {\n      this.renderer.setAttribute(\n        radio.inputEl()?.nativeElement,\n        'name',\n        this.groupName\n      );\n      radio.selected.subscribe((value) => {\n        this.onChange(value);\n      });\n    });\n  }\n\n  onChange = (value: string) => {};\n  onTouched = () => {};\n\n  writeValue(value: string): void {\n    this.value = value;\n  }\n\n  registerOnChange(fn: (value: string) => void): void {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 43,
                "jsdoctags": [
                    {
                        "name": "renderer",
                        "type": "Renderer2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit",
                "ControlValueAccessor"
            ],
            "accessors": {
                "className": {
                    "name": "className",
                    "getSignature": {
                        "name": "className",
                        "type": "",
                        "returnType": "",
                        "line": 35
                    }
                }
            },
            "templateData": "<ng-content></ng-content>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "BackLink",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/back-link/src/back-link.directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <a ngxGovukBackLink>Back</a>\n    `,\n  }),\n}"
            },
            {
                "name": "Breadcrumbs",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/breadcrumbs/src/breadcrumbs.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"govuk-frontend-supported\">\n        <ngx-govuk-breadcrumbs>\n          <a ngxGovukBreadcrumbItem [routerLink]=\"['/']\">Home</a>\n          <a ngxGovukBreadcrumbItem [routerLink]=\"['/']\">Passports, travel and living abroad</a>\n          <a ngxGovukBreadcrumbItem [routerLink]=\"['/']\">Travel abroad</a>\n        </ngx-govuk-breadcrumbs>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "Button",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/button/src/button.directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  argTypes: {\n    type: {\n      options: ['default', 'secondary', 'warning'],\n      control: { type: 'select' },\n    },\n  },\n  render: (args: NgxGovukButtonDirective) => ({\n    props: args,\n    template: `\n      <button ngxGovukButton [type]=\"type\">Action</button>\n    `,\n  }),\n}"
            },
            {
                "name": "ButtonGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/button/src/button.directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  render: () => ({\n    template: `\n      <div ngxGovukButtonGroup>\n        <button ngxGovukButton>Coninue</button>\n        <a href=\"#\" ngxGovukButton type=\"secondary\">Cancel</a>\n      </div>\n    `,\n  }),\n}"
            },
            {
                "name": "CharacterCount",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/character-count/character-count.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  args: {\n    limit: 10,\n  },\n  render: (args: NgxGovUkCharacterCountComponent) => ({\n    props: {\n      limit: args.limit,\n    },\n    template: `\n<ngx-govuk-character-count [limit]=\"limit\">\n  <ngx-govuk-form-group [asPageHeading]=\"true\" label=\"Can you provide more detail?\" hint=\"Do not include personal or financial information like your National Insurance number or credit card details.\" >\n    <textarea ngxGovukTextarea></textarea>\n  </ngx-govuk-form-group>\n</ngx-govuk-character-count>`,\n  }),\n}"
            },
            {
                "name": "Checkboxes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/checkboxes/checkboxes.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  render: () => ({\n    props: {\n      form: new FormGroup({\n        animals: new FormControl(false),\n        quarries: new FormControl(false),\n        agricultural: new FormControl(true),\n      }),\n    },\n    template: `\n<form [formGroup]=\"form\">\n  <ngx-govuk-fieldset legend=\"Which types of waste do you transport?\" hint=\"Select all that apply\">\n    <div ngxGovukCheckboxes>\n      <ngx-govuk-checkbox formControlName=\"animals\" label=\"Waste from animal carcasses\"></ngx-govuk-checkbox>\n      <ngx-govuk-checkbox formControlName=\"quarries\" label=\"Waste from mines or quarries\"></ngx-govuk-checkbox>\n      <ngx-govuk-checkbox formControlName=\"agricultural\" label=\"Farm or agricultural waste\"></ngx-govuk-checkbox>\n    </div>\n  </ngx-govuk-fieldset>\n\n  {{ form.value | json }}\n\n</form>\n`,\n  }),\n}"
            },
            {
                "name": "DateInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/date-input/date-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  render: () => ({\n    props: {\n      form: new FormGroup({\n        date: new FormControl(),\n      }),\n    },\n    template: `\n<form [formGroup]=\"form\">\n\n  <ngx-govuk-date-input formControlName=\"date\"></ngx-govuk-date-input>\n\n  {{ form.value | json }}\n\n</form>\n`,\n  }),\n}"
            },
            {
                "name": "Details",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/details/src/details.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  args: {\n    summaryText: 'Help with nationality',\n    text: 'We need to know your nationality so we can work out which elections you’re entitled to vote in. If you cannot provide your nationality, you’ll have to send copies of identity documents through the post.',\n  },\n  render: (args: NgxGovukDetailsComponent) => ({\n    props: args,\n    template: `\n      <ngx-govuk-details [summaryText]=\"summaryText\" [text]=\"text\">\n      </ngx-govuk-details>`,\n  }),\n}"
            },
            {
                "name": "Fieldset",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/fieldset/fieldset.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  args: {\n    legend: 'What is your address?',\n    hint: 'Fill in your details',\n  },\n  render: (args: NgxGovukFieldsetComponent) => ({\n    props: args,\n    template: `\n<ngx-govuk-fieldset [legend]=\"legend\" [hint]=\"hint\">\n  <ngx-govuk-form-group label=\"Address line 1\">\n    <input ngxGovukTextInput type=\"text\" />\n  </ngx-govuk-form-group>\n</ngx-govuk-fieldset>`,\n  }),\n}"
            },
            {
                "name": "FormGroup",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/form-group/form-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'What is the name of the event?',\n    hint: 'The name you’ll use on promotional material',\n    asPageHeading: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n<ngx-govuk-form-group [label]=\"label\" [hint]=\"hint\" [asPageHeading]=\"asPageHeading\">\n  <input ngxGovukTextInput type=\"text\" />\n</ngx-govuk-form-group>`,\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/accordion/src/accordion.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NgxGovukAccordionComponent>",
                "defaultValue": "{\n  component: NgxGovukAccordionComponent,\n  title: 'UI Components/Accordion',\n  decorators: [\n    moduleMetadata({\n      imports: [NgxGovukAccordionComponent, NgxGovukAccordionPanelComponent],\n    }),\n  ],\n  parameters: {\n    controls: {\n      include: ['heading'],\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/breadcrumbs/src/breadcrumbs.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NgxGovukBreadcrumbsComponent>",
                "defaultValue": "{\n  component: NgxGovukBreadcrumbsComponent,\n  title: 'UI Components/Breadcrumbs',\n  decorators: [\n    moduleMetadata({\n      imports: [RouterModule, NgxGovukBreadcrumbItemDirective],\n    }),\n    applicationConfig({\n      providers: [\n        provideRouter([\n          { path: 'iframe.html', component: NgxGovukBreadcrumbsComponent },\n        ]),\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/back-link/src/back-link.directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NgxGovukBackLinkDirective>",
                "defaultValue": "{\n  component: NgxGovukBackLinkDirective,\n  title: 'UI Components/Back Link',\n  decorators: [\n    moduleMetadata({\n      imports: [],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/details/src/details.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NgxGovukDetailsComponent>",
                "defaultValue": "{\n  component: NgxGovukDetailsComponent,\n  title: 'UI Components/Details',\n  decorators: [\n    moduleMetadata({\n      imports: [],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/button/src/button.directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NgxGovukButtonDirective>",
                "defaultValue": "{\n  component: NgxGovukButtonDirective,\n  title: 'UI Components/Button',\n  decorators: [\n    moduleMetadata({\n      imports: [NgxGovukButtonGroupDirective],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/character-count/character-count.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NgxGovUkCharacterCountComponent>",
                "defaultValue": "{\n  component: NgxGovUkCharacterCountComponent,\n  title: 'Form Components/Character Count',\n  decorators: [\n    moduleMetadata({\n      imports: [NgxGovukFormGroupComponent, NgxGovukTextareaDirective],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/checkboxes/checkboxes.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NgxGovukCheckboxesDirective>",
                "defaultValue": "{\n  component: NgxGovukCheckboxesDirective,\n  title: 'Form Components/Checkboxes',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        ReactiveFormsModule,\n        NgxGovukFieldsetComponent,\n        NgxGovukFormGroupComponent,\n        NgxGovukCheckboxComponent,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/form-group/form-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NgxGovukFormGroupComponent>",
                "defaultValue": "{\n  component: NgxGovukFormGroupComponent,\n  title: 'Form Components/Form Group',\n  decorators: [\n    moduleMetadata({\n      imports: [NgxGovukTextInputDirective, NgxGovukTextareaDirective],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/date-input/date-input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NgxGovukDateInputComponent>",
                "defaultValue": "{\n  component: NgxGovukDateInputComponent,\n  title: 'Form Components/Date Input',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        ReactiveFormsModule,\n        NgxGovukFieldsetComponent,\n        NgxGovukFormGroupComponent,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/fieldset/fieldset.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NgxGovukFieldsetComponent>",
                "defaultValue": "{\n  component: NgxGovukFieldsetComponent,\n  title: 'Form Components/Fieldset',\n  decorators: [\n    moduleMetadata({\n      imports: [NgxGovukFormGroupComponent, NgxGovukTextInputDirective],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/radios/radios.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NgxGovukRadioGroupComponent>",
                "defaultValue": "{\n  component: NgxGovukRadioGroupComponent,\n  title: 'Form Components/Radios',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        ReactiveFormsModule,\n        NgxGovukFieldsetComponent,\n        NgxGovukFormGroupComponent,\n        NgxGovukRadioComponent,\n      ],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/textarea/textarea.directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NgxGovukTextareaDirective>",
                "defaultValue": "{\n  component: NgxGovukTextareaDirective,\n  title: 'Form Components/Textarea',\n  decorators: [\n    moduleMetadata({\n      imports: [],\n    }),\n  ],\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/text-input/text-input.directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<NgxGovukTextInputDirective>",
                "defaultValue": "{\n  component: NgxGovukTextInputDirective,\n  title: 'Form Components/Text Input',\n  decorators: [\n    moduleMetadata({\n      imports: [],\n    }),\n  ],\n  argTypes: {\n    width: {\n      options: ['full', '20', '10', '5', '4', '3', '2'],\n      control: { type: 'select' },\n    },\n  },\n}"
            },
            {
                "name": "Radios",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/radios/radios.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  args: {\n    asPageHeading: true,\n  },\n  render: (args: NgxGovukFieldsetComponent) => ({\n    props: {\n      asPageHeading: args.asPageHeading,\n      form: new FormGroup({\n        whereDoYouLive: new FormControl(),\n      }),\n    },\n    template: `\n<form [formGroup]=\"form\">\n  <ngx-govuk-fieldset legend=\"Where do you live?\" [asPageHeading]=\"asPageHeading\">\n    <ngx-govuk-radio-group formControlName=\"whereDoYouLive\">\n      <ngx-govuk-radio value=\"england\" label=\"England\"></ngx-govuk-radio>\n      <ngx-govuk-radio value=\"scotland\" label=\"Scotland\"></ngx-govuk-radio>\n      <ngx-govuk-radio value=\"wales\" label=\"Wales\"></ngx-govuk-radio>\n    </ngx-govuk-radio-group>\n  </ngx-govuk-fieldset>\n\n  {{ form.value | json }}\n\n</form>\n`,\n  }),\n}"
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/accordion/src/accordion.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryObj<NgxGovukAccordionComponent>",
                "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n<div class=\"govuk-frontend-supported\">\n  <ngx-govuk-accordion>\n    <ngx-govuk-accordion-panel heading=\"Writing well for the web\"><p class=\"govuk-body\">This is the content for Writing well for the web.</p></ngx-govuk-accordion-panel>\n    <ngx-govuk-accordion-panel heading=\"Writing well for specialists\"><p class=\"govuk-body\">This is the content for Writing well for specialists.</p></ngx-govuk-accordion-panel>\n    <ngx-govuk-accordion-panel heading=\"Know your audience\"><p class=\"govuk-body\">This is the content for Know your audience.</p></ngx-govuk-accordion-panel>\n    <ngx-govuk-accordion-panel heading=\"How people read\"><p class=\"govuk-body\">This is the content for How people read.</p></ngx-govuk-accordion-panel>\n  </ngx-govuk-accordion>\n</div>\n`,\n  }),\n}"
            },
            {
                "name": "Textarea",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/textarea/textarea.directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <textarea ngxGovukTextarea></textarea>\n    `,\n  }),\n}"
            },
            {
                "name": "TextInput",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/ngx-govuk/forms/src/text-input/text-input.directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    width: 'full',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <input ngxGovukTextInput type=\"text\" [width]=\"width\" />\n    `,\n  }),\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "InputWidth",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"2\" | \"3\" | \"4\" | \"5\" | \"10\" | \"20\" | \"full\"",
                "file": "libs/ngx-govuk/forms/src/models.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NgxGovukAccordionComponent>",
                "file": "libs/ngx-govuk/accordion/src/accordion.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NgxGovukBreadcrumbsComponent>",
                "file": "libs/ngx-govuk/breadcrumbs/src/breadcrumbs.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NgxGovukBackLinkDirective>",
                "file": "libs/ngx-govuk/back-link/src/back-link.directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NgxGovukFormGroupComponent>",
                "file": "libs/ngx-govuk/forms/src/form-group/form-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NgxGovukTextareaDirective>",
                "file": "libs/ngx-govuk/forms/src/textarea/textarea.directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<NgxGovukTextInputDirective>",
                "file": "libs/ngx-govuk/forms/src/text-input/text-input.directive.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/ngx-govuk/back-link/src/back-link.directive.stories.ts": [
                {
                    "name": "BackLink",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/back-link/src/back-link.directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <a ngxGovukBackLink>Back</a>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/back-link/src/back-link.directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NgxGovukBackLinkDirective>",
                    "defaultValue": "{\n  component: NgxGovukBackLinkDirective,\n  title: 'UI Components/Back Link',\n  decorators: [\n    moduleMetadata({\n      imports: [],\n    }),\n  ],\n}"
                }
            ],
            "libs/ngx-govuk/breadcrumbs/src/breadcrumbs.component.stories.ts": [
                {
                    "name": "Breadcrumbs",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/breadcrumbs/src/breadcrumbs.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n      <div class=\"govuk-frontend-supported\">\n        <ngx-govuk-breadcrumbs>\n          <a ngxGovukBreadcrumbItem [routerLink]=\"['/']\">Home</a>\n          <a ngxGovukBreadcrumbItem [routerLink]=\"['/']\">Passports, travel and living abroad</a>\n          <a ngxGovukBreadcrumbItem [routerLink]=\"['/']\">Travel abroad</a>\n        </ngx-govuk-breadcrumbs>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/breadcrumbs/src/breadcrumbs.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NgxGovukBreadcrumbsComponent>",
                    "defaultValue": "{\n  component: NgxGovukBreadcrumbsComponent,\n  title: 'UI Components/Breadcrumbs',\n  decorators: [\n    moduleMetadata({\n      imports: [RouterModule, NgxGovukBreadcrumbItemDirective],\n    }),\n    applicationConfig({\n      providers: [\n        provideRouter([\n          { path: 'iframe.html', component: NgxGovukBreadcrumbsComponent },\n        ]),\n      ],\n    }),\n  ],\n}"
                }
            ],
            "libs/ngx-govuk/button/src/button.directive.stories.ts": [
                {
                    "name": "Button",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/button/src/button.directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  argTypes: {\n    type: {\n      options: ['default', 'secondary', 'warning'],\n      control: { type: 'select' },\n    },\n  },\n  render: (args: NgxGovukButtonDirective) => ({\n    props: args,\n    template: `\n      <button ngxGovukButton [type]=\"type\">Action</button>\n    `,\n  }),\n}"
                },
                {
                    "name": "ButtonGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/button/src/button.directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  render: () => ({\n    template: `\n      <div ngxGovukButtonGroup>\n        <button ngxGovukButton>Coninue</button>\n        <a href=\"#\" ngxGovukButton type=\"secondary\">Cancel</a>\n      </div>\n    `,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/button/src/button.directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NgxGovukButtonDirective>",
                    "defaultValue": "{\n  component: NgxGovukButtonDirective,\n  title: 'UI Components/Button',\n  decorators: [\n    moduleMetadata({\n      imports: [NgxGovukButtonGroupDirective],\n    }),\n  ],\n}"
                }
            ],
            "libs/ngx-govuk/forms/src/character-count/character-count.component.stories.ts": [
                {
                    "name": "CharacterCount",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/character-count/character-count.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  args: {\n    limit: 10,\n  },\n  render: (args: NgxGovUkCharacterCountComponent) => ({\n    props: {\n      limit: args.limit,\n    },\n    template: `\n<ngx-govuk-character-count [limit]=\"limit\">\n  <ngx-govuk-form-group [asPageHeading]=\"true\" label=\"Can you provide more detail?\" hint=\"Do not include personal or financial information like your National Insurance number or credit card details.\" >\n    <textarea ngxGovukTextarea></textarea>\n  </ngx-govuk-form-group>\n</ngx-govuk-character-count>`,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/character-count/character-count.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NgxGovUkCharacterCountComponent>",
                    "defaultValue": "{\n  component: NgxGovUkCharacterCountComponent,\n  title: 'Form Components/Character Count',\n  decorators: [\n    moduleMetadata({\n      imports: [NgxGovukFormGroupComponent, NgxGovukTextareaDirective],\n    }),\n  ],\n}"
                }
            ],
            "libs/ngx-govuk/forms/src/checkboxes/checkboxes.stories.ts": [
                {
                    "name": "Checkboxes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/checkboxes/checkboxes.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  render: () => ({\n    props: {\n      form: new FormGroup({\n        animals: new FormControl(false),\n        quarries: new FormControl(false),\n        agricultural: new FormControl(true),\n      }),\n    },\n    template: `\n<form [formGroup]=\"form\">\n  <ngx-govuk-fieldset legend=\"Which types of waste do you transport?\" hint=\"Select all that apply\">\n    <div ngxGovukCheckboxes>\n      <ngx-govuk-checkbox formControlName=\"animals\" label=\"Waste from animal carcasses\"></ngx-govuk-checkbox>\n      <ngx-govuk-checkbox formControlName=\"quarries\" label=\"Waste from mines or quarries\"></ngx-govuk-checkbox>\n      <ngx-govuk-checkbox formControlName=\"agricultural\" label=\"Farm or agricultural waste\"></ngx-govuk-checkbox>\n    </div>\n  </ngx-govuk-fieldset>\n\n  {{ form.value | json }}\n\n</form>\n`,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/checkboxes/checkboxes.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NgxGovukCheckboxesDirective>",
                    "defaultValue": "{\n  component: NgxGovukCheckboxesDirective,\n  title: 'Form Components/Checkboxes',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        ReactiveFormsModule,\n        NgxGovukFieldsetComponent,\n        NgxGovukFormGroupComponent,\n        NgxGovukCheckboxComponent,\n      ],\n    }),\n  ],\n}"
                }
            ],
            "libs/ngx-govuk/forms/src/date-input/date-input.stories.ts": [
                {
                    "name": "DateInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/date-input/date-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  render: () => ({\n    props: {\n      form: new FormGroup({\n        date: new FormControl(),\n      }),\n    },\n    template: `\n<form [formGroup]=\"form\">\n\n  <ngx-govuk-date-input formControlName=\"date\"></ngx-govuk-date-input>\n\n  {{ form.value | json }}\n\n</form>\n`,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/date-input/date-input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NgxGovukDateInputComponent>",
                    "defaultValue": "{\n  component: NgxGovukDateInputComponent,\n  title: 'Form Components/Date Input',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        ReactiveFormsModule,\n        NgxGovukFieldsetComponent,\n        NgxGovukFormGroupComponent,\n      ],\n    }),\n  ],\n}"
                }
            ],
            "libs/ngx-govuk/details/src/details.component.stories.ts": [
                {
                    "name": "Details",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/details/src/details.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  args: {\n    summaryText: 'Help with nationality',\n    text: 'We need to know your nationality so we can work out which elections you’re entitled to vote in. If you cannot provide your nationality, you’ll have to send copies of identity documents through the post.',\n  },\n  render: (args: NgxGovukDetailsComponent) => ({\n    props: args,\n    template: `\n      <ngx-govuk-details [summaryText]=\"summaryText\" [text]=\"text\">\n      </ngx-govuk-details>`,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/details/src/details.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NgxGovukDetailsComponent>",
                    "defaultValue": "{\n  component: NgxGovukDetailsComponent,\n  title: 'UI Components/Details',\n  decorators: [\n    moduleMetadata({\n      imports: [],\n    }),\n  ],\n}"
                }
            ],
            "libs/ngx-govuk/forms/src/fieldset/fieldset.component.stories.ts": [
                {
                    "name": "Fieldset",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/fieldset/fieldset.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  args: {\n    legend: 'What is your address?',\n    hint: 'Fill in your details',\n  },\n  render: (args: NgxGovukFieldsetComponent) => ({\n    props: args,\n    template: `\n<ngx-govuk-fieldset [legend]=\"legend\" [hint]=\"hint\">\n  <ngx-govuk-form-group label=\"Address line 1\">\n    <input ngxGovukTextInput type=\"text\" />\n  </ngx-govuk-form-group>\n</ngx-govuk-fieldset>`,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/fieldset/fieldset.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NgxGovukFieldsetComponent>",
                    "defaultValue": "{\n  component: NgxGovukFieldsetComponent,\n  title: 'Form Components/Fieldset',\n  decorators: [\n    moduleMetadata({\n      imports: [NgxGovukFormGroupComponent, NgxGovukTextInputDirective],\n    }),\n  ],\n}"
                }
            ],
            "libs/ngx-govuk/forms/src/form-group/form-group.component.stories.ts": [
                {
                    "name": "FormGroup",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/form-group/form-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'What is the name of the event?',\n    hint: 'The name you’ll use on promotional material',\n    asPageHeading: true,\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n<ngx-govuk-form-group [label]=\"label\" [hint]=\"hint\" [asPageHeading]=\"asPageHeading\">\n  <input ngxGovukTextInput type=\"text\" />\n</ngx-govuk-form-group>`,\n  }),\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/form-group/form-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NgxGovukFormGroupComponent>",
                    "defaultValue": "{\n  component: NgxGovukFormGroupComponent,\n  title: 'Form Components/Form Group',\n  decorators: [\n    moduleMetadata({\n      imports: [NgxGovukTextInputDirective, NgxGovukTextareaDirective],\n    }),\n  ],\n}"
                }
            ],
            "libs/ngx-govuk/accordion/src/accordion.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/accordion/src/accordion.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NgxGovukAccordionComponent>",
                    "defaultValue": "{\n  component: NgxGovukAccordionComponent,\n  title: 'UI Components/Accordion',\n  decorators: [\n    moduleMetadata({\n      imports: [NgxGovukAccordionComponent, NgxGovukAccordionPanelComponent],\n    }),\n  ],\n  parameters: {\n    controls: {\n      include: ['heading'],\n    },\n  },\n}"
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/accordion/src/accordion.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryObj<NgxGovukAccordionComponent>",
                    "defaultValue": "{\n  args: {},\n  render: (args) => ({\n    props: args,\n    template: `\n<div class=\"govuk-frontend-supported\">\n  <ngx-govuk-accordion>\n    <ngx-govuk-accordion-panel heading=\"Writing well for the web\"><p class=\"govuk-body\">This is the content for Writing well for the web.</p></ngx-govuk-accordion-panel>\n    <ngx-govuk-accordion-panel heading=\"Writing well for specialists\"><p class=\"govuk-body\">This is the content for Writing well for specialists.</p></ngx-govuk-accordion-panel>\n    <ngx-govuk-accordion-panel heading=\"Know your audience\"><p class=\"govuk-body\">This is the content for Know your audience.</p></ngx-govuk-accordion-panel>\n    <ngx-govuk-accordion-panel heading=\"How people read\"><p class=\"govuk-body\">This is the content for How people read.</p></ngx-govuk-accordion-panel>\n  </ngx-govuk-accordion>\n</div>\n`,\n  }),\n}"
                }
            ],
            "libs/ngx-govuk/forms/src/radios/radios.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/radios/radios.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NgxGovukRadioGroupComponent>",
                    "defaultValue": "{\n  component: NgxGovukRadioGroupComponent,\n  title: 'Form Components/Radios',\n  decorators: [\n    moduleMetadata({\n      imports: [\n        ReactiveFormsModule,\n        NgxGovukFieldsetComponent,\n        NgxGovukFormGroupComponent,\n        NgxGovukRadioComponent,\n      ],\n    }),\n  ],\n}"
                },
                {
                    "name": "Radios",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/radios/radios.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  args: {\n    asPageHeading: true,\n  },\n  render: (args: NgxGovukFieldsetComponent) => ({\n    props: {\n      asPageHeading: args.asPageHeading,\n      form: new FormGroup({\n        whereDoYouLive: new FormControl(),\n      }),\n    },\n    template: `\n<form [formGroup]=\"form\">\n  <ngx-govuk-fieldset legend=\"Where do you live?\" [asPageHeading]=\"asPageHeading\">\n    <ngx-govuk-radio-group formControlName=\"whereDoYouLive\">\n      <ngx-govuk-radio value=\"england\" label=\"England\"></ngx-govuk-radio>\n      <ngx-govuk-radio value=\"scotland\" label=\"Scotland\"></ngx-govuk-radio>\n      <ngx-govuk-radio value=\"wales\" label=\"Wales\"></ngx-govuk-radio>\n    </ngx-govuk-radio-group>\n  </ngx-govuk-fieldset>\n\n  {{ form.value | json }}\n\n</form>\n`,\n  }),\n}"
                }
            ],
            "libs/ngx-govuk/forms/src/textarea/textarea.directive.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/textarea/textarea.directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NgxGovukTextareaDirective>",
                    "defaultValue": "{\n  component: NgxGovukTextareaDirective,\n  title: 'Form Components/Textarea',\n  decorators: [\n    moduleMetadata({\n      imports: [],\n    }),\n  ],\n}"
                },
                {
                    "name": "Textarea",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/textarea/textarea.directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  render: (args) => ({\n    props: args,\n    template: `\n      <textarea ngxGovukTextarea></textarea>\n    `,\n  }),\n}"
                }
            ],
            "libs/ngx-govuk/forms/src/text-input/text-input.directive.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/text-input/text-input.directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<NgxGovukTextInputDirective>",
                    "defaultValue": "{\n  component: NgxGovukTextInputDirective,\n  title: 'Form Components/Text Input',\n  decorators: [\n    moduleMetadata({\n      imports: [],\n    }),\n  ],\n  argTypes: {\n    width: {\n      options: ['full', '20', '10', '5', '4', '3', '2'],\n      control: { type: 'select' },\n    },\n  },\n}"
                },
                {
                    "name": "TextInput",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/ngx-govuk/forms/src/text-input/text-input.directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    width: 'full',\n  },\n  render: (args) => ({\n    props: args,\n    template: `\n      <input ngxGovukTextInput type=\"text\" [width]=\"width\" />\n    `,\n  }),\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/ngx-govuk/forms/src/models.ts": [
                {
                    "name": "InputWidth",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"2\" | \"3\" | \"4\" | \"5\" | \"10\" | \"20\" | \"full\"",
                    "file": "libs/ngx-govuk/forms/src/models.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ],
            "libs/ngx-govuk/accordion/src/accordion.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NgxGovukAccordionComponent>",
                    "file": "libs/ngx-govuk/accordion/src/accordion.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/ngx-govuk/breadcrumbs/src/breadcrumbs.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NgxGovukBreadcrumbsComponent>",
                    "file": "libs/ngx-govuk/breadcrumbs/src/breadcrumbs.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/ngx-govuk/back-link/src/back-link.directive.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NgxGovukBackLinkDirective>",
                    "file": "libs/ngx-govuk/back-link/src/back-link.directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/ngx-govuk/forms/src/form-group/form-group.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NgxGovukFormGroupComponent>",
                    "file": "libs/ngx-govuk/forms/src/form-group/form-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/ngx-govuk/forms/src/textarea/textarea.directive.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NgxGovukTextareaDirective>",
                    "file": "libs/ngx-govuk/forms/src/textarea/textarea.directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/ngx-govuk/forms/src/text-input/text-input.directive.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<NgxGovukTextInputDirective>",
                    "file": "libs/ngx-govuk/forms/src/text-input/text-input.directive.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "libs/ngx-govuk/accordion/src/accordion-panel.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgxGovukAccordionPanelComponent",
                "coveragePercent": 16,
                "coverageCount": "1/6",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/accordion/src/accordion.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/accordion/src/accordion.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/accordion/src/accordion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgxGovukAccordionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/back-link/src/back-link.directive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BackLink",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/back-link/src/back-link.directive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/back-link/src/back-link.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "NgxGovukBackLinkDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/breadcrumbs/src/breadcrumb-item.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "NgxGovukBreadcrumbItemDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/breadcrumbs/src/breadcrumbs.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Breadcrumbs",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/breadcrumbs/src/breadcrumbs.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/breadcrumbs/src/breadcrumbs.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgxGovukBreadcrumbsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/button/src/button-group.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "NgxGovukButtonGroupDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/button/src/button.directive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/button/src/button.directive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ButtonGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/button/src/button.directive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/button/src/button.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "NgxGovukButtonDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/details/src/details.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Details",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/details/src/details.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/details/src/details.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgxGovukDetailsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/character-count/character-count.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CharacterCount",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/character-count/character-count.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/character-count/character-count.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgxGovUkCharacterCountComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/checkboxes/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgxGovukCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/checkboxes/checkboxes.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "NgxGovukCheckboxesDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/checkboxes/checkboxes.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Checkboxes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/checkboxes/checkboxes.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/date-input/date-input.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgxGovukDateInputComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/date-input/date-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DateInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/date-input/date-input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/fieldset/fieldset.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Fieldset",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/fieldset/fieldset.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/fieldset/fieldset.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgxGovukFieldsetComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/form-group/form-group.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FormGroup",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/form-group/form-group.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/form-group/form-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgxGovukFormGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/radios/radio-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgxGovukRadioGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/radios/radio.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NgxGovukRadioComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/radios/radios.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/radios/radios.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Radios",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/text-input/text-input.directive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/text-input/text-input.directive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TextInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/text-input/text-input.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "NgxGovukTextInputDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/textarea/textarea.directive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/textarea/textarea.directive.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Textarea",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/ngx-govuk/forms/src/textarea/textarea.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "NgxGovukTextareaDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            }
        ]
    }
}